{
    "sourceFile": "항해99/문제/chap2/10828.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 74,
            "patches": [
                {
                    "date": 1638941310553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638941498818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,13 @@\n const fs = require('fs');\r\n const stdin = (current.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : ``\r\n+  : `So when I die (the [first] I will see in (heaven) is a score list).\r\n+[ first in ] ( first out ).\r\n+Half Moon tonight (At least it is better than no Moon at all].\r\n+A rope may form )( a trail in a maze.\r\n+Help( I[m being held prisoner in a fortune cookie factory)].\r\n+([ (([( [ ] ) ( ) (( ))] )) ]).\r\n+  .\r\n+.`\r\n ).split('\\n');\r\n console.log(stdin);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638941556583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const fs = require('fs');\r\n-const stdin = (current.platform === 'linux'\r\n+const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n   : `So when I die (the [first] I will see in (heaven) is a score list).\r\n [ first in ] ( first out ).\r\n Half Moon tonight (At least it is better than no Moon at all].\r\n"
                },
                {
                    "date": 1638944880025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,5 +9,6 @@\n ([ (([( [ ] ) ( ) (( ))] )) ]).\r\n   .\r\n .`\r\n ).split('\\n');\r\n+\r\n console.log(stdin);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638944961008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,5 +10,9 @@\n   .\r\n .`\r\n ).split('\\n');\r\n \r\n-console.log(stdin);\n\\ No newline at end of file\n+const length = stdin.length;\r\n+\r\n+const answer = () => {\r\n+  \r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638946294365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n ([ (([( [ ] ) ( ) (( ))] )) ]).\r\n   .\r\n .`\r\n ).split('\\n');\r\n-\r\n+const input = stdin;\r\n const length = stdin.length;\r\n \r\n const answer = () => {\r\n-  \r\n+  for ()\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638946507886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,18 @@\n   .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n-const length = stdin.length;\r\n+const test = [];\r\n+test.pop();\r\n \r\n-const answer = () => {\r\n\\ No newline at end of file\n-  for ()\r\n-};\n+// const answer = () => {\r\n+//   for (let i = 0; i < input.length; i++) {\r\n+//     const sentence = input[i];\r\n+//     const stack = [];\r\n+//     for (let j = 0; j < sentence.length; j++) {\r\n+//       if (sentence[j] === '(' || sentence[j] === '[') {\r\n+//         stack.push(sentence[j]);\r\n+//       }\r\n+//     }\r\n+//   }\r\n+// };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638946516560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n const test = [];\r\n-test.pop();\r\n+console.log(test.pop());\r\n \r\n // const answer = () => {\r\n //   for (let i = 0; i < input.length; i++) {\r\n //     const sentence = input[i];\r\n"
                },
                {
                    "date": 1638946533961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n const test = [];\r\n-console.log(test.pop());\r\n+console.log(test);\r\n \r\n // const answer = () => {\r\n //   for (let i = 0; i < input.length; i++) {\r\n //     const sentence = input[i];\r\n"
                },
                {
                    "date": 1638946552993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n   .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n-const test = [];\r\n-console.log(test);\r\n+const test = ['('];\r\n+console.log(test.pop());\r\n \r\n // const answer = () => {\r\n //   for (let i = 0; i < input.length; i++) {\r\n //     const sentence = input[i];\r\n"
                },
                {
                    "date": 1638946565785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n const test = ['('];\r\n-console.log(test.pop());\r\n+test.pop()\r\n+console.log(test);\r\n \r\n // const answer = () => {\r\n //   for (let i = 0; i < input.length; i++) {\r\n //     const sentence = input[i];\r\n"
                },
                {
                    "date": 1638946577006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n   .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n-const test = ['('];\r\n-test.pop()\r\n+const test = [];\r\n+test.pop();\r\n console.log(test);\r\n \r\n // const answer = () => {\r\n //   for (let i = 0; i < input.length; i++) {\r\n"
                },
                {
                    "date": 1638946719766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,19 +10,19 @@\n   .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n-const test = [];\r\n-test.pop();\r\n-console.log(test);\r\n+// const test = [];\r\n+// test.pop();\r\n+// console.log(test);\r\n \r\n-// const answer = () => {\r\n-//   for (let i = 0; i < input.length; i++) {\r\n-//     const sentence = input[i];\r\n-//     const stack = [];\r\n-//     for (let j = 0; j < sentence.length; j++) {\r\n-//       if (sentence[j] === '(' || sentence[j] === '[') {\r\n-//         stack.push(sentence[j]);\r\n-//       }\r\n\\ No newline at end of file\n-//     }\r\n-//   }\r\n-// };\n+const answer = () => {\r\n+  for (let i = 0; i < input.length; i++) {\r\n+    const sentence = input[i];\r\n+    const stack = [];\r\n+    for (let j = 0; j < sentence.length; j++) {\r\n+      if (sentence[j] === '(' || sentence[j] === '[') {\r\n+        stack.push(sentence[j]);\r\n+      } else if (sentence[j] === '(' || sentence[j] === '[')\r\n+    }\r\n+  }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638946895365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,12 @@\n     const stack = [];\r\n     for (let j = 0; j < sentence.length; j++) {\r\n       if (sentence[j] === '(' || sentence[j] === '[') {\r\n         stack.push(sentence[j]);\r\n-      } else if (sentence[j] === '(' || sentence[j] === '[')\r\n+      } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length !== 0) {\r\n+        stack.pop();\r\n+      } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length === 0) {\r\n+        \r\n+      }\r\n     }\r\n   }\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638947014301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,15 +18,19 @@\n const answer = () => {\r\n   for (let i = 0; i < input.length; i++) {\r\n     const sentence = input[i];\r\n     const stack = [];\r\n+    let check = 'yes';\r\n     for (let j = 0; j < sentence.length; j++) {\r\n       if (sentence[j] === '(' || sentence[j] === '[') {\r\n         stack.push(sentence[j]);\r\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length !== 0) {\r\n         stack.pop();\r\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length === 0) {\r\n-        \r\n+        check = 'no';\r\n+        break;\r\n       }\r\n     }\r\n+    console.log(check);\r\n   }\r\n+  return;\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638947021521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,5 +32,6 @@\n     }\r\n     console.log(check);\r\n   }\r\n   return;\r\n-};\n\\ No newline at end of file\n+};\r\n+answer();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638947127689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,12 @@\n \r\n const answer = () => {\r\n   for (let i = 0; i < input.length; i++) {\r\n     const sentence = input[i];\r\n+    if (sentence === ' ') {\r\n+      console.log('yes');\r\n+      break;\r\n+    }\r\n     const stack = [];\r\n     let check = 'yes';\r\n     for (let j = 0; j < sentence.length; j++) {\r\n       if (sentence[j] === '(' || sentence[j] === '[') {\r\n"
                },
                {
                    "date": 1638947193184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,9 @@\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length === 0) {\r\n         check = 'no';\r\n         break;\r\n       }\r\n+      console.log(stack);\r\n     }\r\n     console.log(check);\r\n   }\r\n   return;\r\n"
                },
                {
                    "date": 1638947202406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n const answer = () => {\r\n   for (let i = 0; i < input.length; i++) {\r\n     const sentence = input[i];\r\n     if (sentence === ' ') {\r\n-      console.log('yes');\r\n+      // console.log('yes');\r\n       break;\r\n     }\r\n     const stack = [];\r\n     let check = 'yes';\r\n@@ -34,9 +34,9 @@\n         break;\r\n       }\r\n       console.log(stack);\r\n     }\r\n-    console.log(check);\r\n+    // console.log(check);\r\n   }\r\n   return;\r\n };\r\n answer();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638947361720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,9 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `So when I die (the [first] I will see in (heaven) is a score list).\r\n-[ first in ] ( first out ).\r\n-Half Moon tonight (At least it is better than no Moon at all].\r\n-A rope may form )( a trail in a maze.\r\n-Help( I[m being held prisoner in a fortune cookie factory)].\r\n-([ (([( [ ] ) ( ) (( ))] )) ]).\r\n+  : `A rope may form )( a trail in a maze.\r\n+.\r\n   .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n"
                },
                {
                    "date": 1638947378911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n   : `A rope may form )( a trail in a maze.\r\n-.\r\n   .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n"
                },
                {
                    "date": 1638947405403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n const answer = () => {\r\n   for (let i = 0; i < input.length; i++) {\r\n     const sentence = input[i];\r\n     if (sentence === ' ') {\r\n-      // console.log('yes');\r\n+      console.log('yes');\r\n       break;\r\n     }\r\n     const stack = [];\r\n     let check = 'yes';\r\n@@ -29,9 +29,9 @@\n         break;\r\n       }\r\n       console.log(stack);\r\n     }\r\n-    // console.log(check);\r\n+    console.log(check);\r\n   }\r\n   return;\r\n };\r\n answer();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638947500739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n   : `A rope may form )( a trail in a maze.\r\n-  .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n"
                },
                {
                    "date": 1638947573598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n \r\n const answer = () => {\r\n   for (let i = 0; i < input.length; i++) {\r\n     const sentence = input[i];\r\n+    console.log(sentence);\r\n     if (sentence === ' ') {\r\n       console.log('yes');\r\n       break;\r\n     }\r\n"
                },
                {
                    "date": 1638947596856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n // test.pop();\r\n // console.log(test);\r\n \r\n const answer = () => {\r\n-  for (let i = 0; i < input.length; i++) {\r\n+  for (let i = 0; i < input.length - 1; i++) {\r\n     const sentence = input[i];\r\n     console.log(sentence);\r\n     if (sentence === ' ') {\r\n       console.log('yes');\r\n"
                },
                {
                    "date": 1638947624999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,15 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `A rope may form )( a trail in a maze.\r\n-.`\r\n+: `So when I die (the [first] I will see in (heaven) is a score list).\r\n+[ first in ] ( first out ).\r\n+Half Moon tonight (At least it is better than no Moon at all].\r\n+A rope may form )( a trail in a maze.\r\n+Help( I[m being held prisoner in a fortune cookie factory)].\r\n+([ (([( [ ] ) ( ) (( ))] )) ]).\r\n+  .\r\n+  .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n // test.pop();\r\n"
                },
                {
                    "date": 1638947642870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length === 0) {\r\n         check = 'no';\r\n         break;\r\n       }\r\n-      console.log(stack);\r\n+      // console.log(stack);\r\n     }\r\n     console.log(check);\r\n   }\r\n   return;\r\n"
                },
                {
                    "date": 1638947907900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,14 @@\n     for (let j = 0; j < sentence.length; j++) {\r\n       if (sentence[j] === '(' || sentence[j] === '[') {\r\n         stack.push(sentence[j]);\r\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length !== 0) {\r\n-        stack.pop();\r\n+        if (sentence[j] === ')' && stack[stack.length - 1] === '(') {\r\n+          stack.pop();\r\n+        } else {\r\n+          check = 'no';\r\n+          break;\r\n+        }\r\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length === 0) {\r\n         check = 'no';\r\n         break;\r\n       }\r\n"
                },
                {
                    "date": 1638947975827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n     for (let j = 0; j < sentence.length; j++) {\r\n       if (sentence[j] === '(' || sentence[j] === '[') {\r\n         stack.push(sentence[j]);\r\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length !== 0) {\r\n-        if (sentence[j] === ')' && stack[stack.length - 1] === '(') {\r\n+        if ((sentence[j] === ')' && stack[stack.length - 1] === '(') ||\r\n+          (sentence[j] === ']' && stack[stack.length - 1] === '[')) {\r\n           stack.pop();\r\n         } else {\r\n           check = 'no';\r\n           break;\r\n"
                },
                {
                    "date": 1638948001842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n \r\n const answer = () => {\r\n   for (let i = 0; i < input.length - 1; i++) {\r\n     const sentence = input[i];\r\n-    console.log(sentence);\r\n+    // console.log(sentence);\r\n     if (sentence === ' ') {\r\n       console.log('yes');\r\n       break;\r\n     }\r\n"
                },
                {
                    "date": 1638948233353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,9 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `So when I die (the [first] I will see in (heaven) is a score list).\r\n-[ first in ] ( first out ).\r\n-Half Moon tonight (At least it is better than no Moon at all].\r\n-A rope may form )( a trail in a maze.\r\n-Help( I[m being held prisoner in a fortune cookie factory)].\r\n-([ (([( [ ] ) ( ) (( ))] )) ]).\r\n-  .\r\n-  .`\r\n+: `(])\r\n+.`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n // test.pop();\r\n"
                },
                {
                    "date": 1638948263964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `(])\r\n+: `[()()).\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n"
                },
                {
                    "date": 1638948318978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `[()()).\r\n+: `(][].\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n"
                },
                {
                    "date": 1638948448973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `(][].\r\n+: `[]].\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n"
                },
                {
                    "date": 1638948668701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,12 +12,12 @@\n const answer = () => {\r\n   for (let i = 0; i < input.length - 1; i++) {\r\n     const sentence = input[i];\r\n     // console.log(sentence);\r\n-    if (sentence === ' ') {\r\n-      console.log('yes');\r\n-      break;\r\n-    }\r\n+    // if (sentence === ' ') {\r\n+    //   console.log('yes');\r\n+    //   break;\r\n+    // }\r\n     const stack = [];\r\n     let check = 'yes';\r\n     for (let j = 0; j < sentence.length; j++) {\r\n       if (sentence[j] === '(' || sentence[j] === '[') {\r\n"
                },
                {
                    "date": 1638948700211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,14 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `[]].\r\n+: `So when I die (the [first] I will see in (heaven) is a score list).\r\n+[ first in ] ( first out ).\r\n+Half Moon tonight (At least it is better than no Moon at all].\r\n+A rope may form )( a trail in a maze.\r\n+Help( I[m being held prisoner in a fortune cookie factory)].\r\n+([ (([( [ ] ) ( ) (( ))] )) ]).\r\n+ .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n"
                },
                {
                    "date": 1638948845754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,14 @@\n         break;\r\n       }\r\n       // console.log(stack);\r\n     }\r\n-    console.log(check);\r\n+    if (stack.length !== 0) {\r\n+      console.log('no');\r\n+    } else {\r\n+      console.log(check);\r\n+    }\r\n+    \r\n   }\r\n   return;\r\n };\r\n answer();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638948887920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,14 +41,14 @@\n         break;\r\n       }\r\n       // console.log(stack);\r\n     }\r\n-    if (stack.length !== 0) {\r\n-      console.log('no');\r\n-    } else {\r\n-      console.log(check);\r\n-    }\r\n-    \r\n+    // if (stack.length !== 0) {\r\n+    //   console.log('no');\r\n+    // } else {\r\n+    //   console.log(check);\r\n+    // }\r\n+    console.log(check);\r\n   }\r\n   return;\r\n };\r\n answer();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638948913723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `So when I die (the [first] I will see in (heaven) is a score list).\r\n-[ first in ] ( first out ).\r\n-Half Moon tonight (At least it is better than no Moon at all].\r\n-A rope may form )( a trail in a maze.\r\n-Help( I[m being held prisoner in a fortune cookie factory)].\r\n-([ (([( [ ] ) ( ) (( ))] )) ]).\r\n- .\r\n+: `(((()))\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n"
                },
                {
                    "date": 1638948930528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,14 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `(((()))\r\n+: `So when I die (the [first] I will see in (heaven) is a score list).\r\n+[ first in ] ( first out ).\r\n+Half Moon tonight (At least it is better than no Moon at all].\r\n+A rope may form )( a trail in a maze.\r\n+Help( I[m being held prisoner in a fortune cookie factory)].\r\n+([ (([( [ ] ) ( ) (( ))] )) ]).\r\n+ .\r\n .`\r\n ).split('\\n');\r\n const input = stdin;\r\n // const test = [];\r\n@@ -35,14 +41,14 @@\n         break;\r\n       }\r\n       // console.log(stack);\r\n     }\r\n-    // if (stack.length !== 0) {\r\n-    //   console.log('no');\r\n-    // } else {\r\n-    //   console.log(check);\r\n-    // }\r\n-    console.log(check);\r\n+    if (stack.length !== 0) {\r\n+      console.log('no');\r\n+    } else {\r\n+      console.log(check);\r\n+    }\r\n+    // console.log(check);\r\n   }\r\n   return;\r\n };\r\n answer();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638948942762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-: `So when I die (the [first] I will see in (heaven) is a score list).\r\n+  : `(((()))\r\n+So when I die (the [first] I will see in (heaven) is a score list).\r\n [ first in ] ( first out ).\r\n Half Moon tonight (At least it is better than no Moon at all].\r\n A rope may form )( a trail in a maze.\r\n Help( I[m being held prisoner in a fortune cookie factory)].\r\n"
                },
                {
                    "date": 1638949051587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `(((()))\r\n+  : `[))))]\r\n+(((()))\r\n So when I die (the [first] I will see in (heaven) is a score list).\r\n [ first in ] ( first out ).\r\n Half Moon tonight (At least it is better than no Moon at all].\r\n A rope may form )( a trail in a maze.\r\n"
                },
                {
                    "date": 1638949215299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `[))))]\r\n+  : `[ab\r\n (((()))\r\n So when I die (the [first] I will see in (heaven) is a score list).\r\n [ first in ] ( first out ).\r\n Half Moon tonight (At least it is better than no Moon at all].\r\n"
                },
                {
                    "date": 1638949262697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `[ab\r\n+  : `([)]\r\n (((()))\r\n So when I die (the [first] I will see in (heaven) is a score list).\r\n [ first in ] ( first out ).\r\n Half Moon tonight (At least it is better than no Moon at all].\r\n"
                },
                {
                    "date": 1638949305933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     //   break;\r\n     // }\r\n     const stack = [];\r\n     let check = 'yes';\r\n-    for (let j = 0; j < sentence.length; j++) {\r\n+    for (let j = 0; j < sentence.length - 1; j++) {\r\n       if (sentence[j] === '(' || sentence[j] === '[') {\r\n         stack.push(sentence[j]);\r\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length !== 0) {\r\n         if ((sentence[j] === ')' && stack[stack.length - 1] === '(') ||\r\n"
                },
                {
                    "date": 1638949594439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,13 @@\n           (sentence[j] === ']' && stack[stack.length - 1] === '[')) {\r\n           stack.pop();\r\n         } else {\r\n           check = 'no';\r\n-          break;\r\n+          // break;\r\n         }\r\n       } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length === 0) {\r\n         check = 'no';\r\n-        break;\r\n+        // break;\r\n       }\r\n       // console.log(stack);\r\n     }\r\n     if (stack.length !== 0) {\r\n"
                },
                {
                    "date": 1638966239741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,56 +1,1 @@\n-const fs = require('fs');\r\n-const stdin = (process.platform === 'linux'\r\n-  ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `([)]\r\n-(((()))\r\n-So when I die (the [first] I will see in (heaven) is a score list).\r\n-[ first in ] ( first out ).\r\n-Half Moon tonight (At least it is better than no Moon at all].\r\n-A rope may form )( a trail in a maze.\r\n-Help( I[m being held prisoner in a fortune cookie factory)].\r\n-([ (([( [ ] ) ( ) (( ))] )) ]).\r\n- .\r\n-.`\r\n-).split('\\n');\r\n-const input = stdin;\r\n-// const test = [];\r\n-// test.pop();\r\n-// console.log(test);\r\n-\r\n-const answer = () => {\r\n-  for (let i = 0; i < input.length - 1; i++) {\r\n-    const sentence = input[i];\r\n-    // console.log(sentence);\r\n-    // if (sentence === ' ') {\r\n-    //   console.log('yes');\r\n-    //   break;\r\n-    // }\r\n-    const stack = [];\r\n-    let check = 'yes';\r\n-    for (let j = 0; j < sentence.length - 1; j++) {\r\n-      if (sentence[j] === '(' || sentence[j] === '[') {\r\n-        stack.push(sentence[j]);\r\n-      } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length !== 0) {\r\n-        if ((sentence[j] === ')' && stack[stack.length - 1] === '(') ||\r\n-          (sentence[j] === ']' && stack[stack.length - 1] === '[')) {\r\n-          stack.pop();\r\n-        } else {\r\n-          check = 'no';\r\n-          // break;\r\n-        }\r\n-      } else if ((sentence[j] === ')' || sentence[j] === ']') && stack.length === 0) {\r\n-        check = 'no';\r\n-        // break;\r\n-      }\r\n-      // console.log(stack);\r\n-    }\r\n-    if (stack.length !== 0) {\r\n-      console.log('no');\r\n-    } else {\r\n-      console.log(check);\r\n-    }\r\n-    // console.log(check);\r\n-  }\r\n-  return;\r\n-};\r\n-answer();\n\\ No newline at end of file\n+const \n\\ No newline at end of file\n"
                },
                {
                    "date": 1638966579878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,4 @@\n-const \n\\ No newline at end of file\n+const fs = require('fs');\r\n+const stdin = (process.platform === 'linux'\r\n+  ? fs.readFileSync('/dev/stdin').toString();\r\n+)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638966595439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n-  ? fs.readFileSync('/dev/stdin').toString();\r\n+  ? fs.readFileSync('/dev/stdin').toString()\r\n+  : ``\r\n )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638966619166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,19 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : ``\r\n-)\n\\ No newline at end of file\n+  : `14\r\n+push 1\r\n+push 2\r\n+top\r\n+size\r\n+empty\r\n+pop\r\n+pop\r\n+pop\r\n+size\r\n+empty\r\n+pop\r\n+push 3\r\n+empty\r\n+top`\r\n+).split('\\n');\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638966642536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,5 +15,8 @@\n pop\r\n push 3\r\n empty\r\n top`\r\n-).split('\\n');\n\\ No newline at end of file\n+).split('\\n');\r\n+\r\n+const string = 'qwerq';\r\n+console.log(string.split(' '))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638967545063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,15 @@\n empty\r\n top`\r\n ).split('\\n');\r\n \r\n-const string = 'qwerq';\r\n-console.log(string.split(' '))\n\\ No newline at end of file\n+const input = (() => {\r\n+  let line = 0;\r\n+  return () => stdin[line++];\r\n+})();\r\n+\r\n+const [a, b] = 'qwerqwer'.split(' ');\r\n+\r\n+// let t = input();\r\n+// while (t--) {\r\n+//   const \r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638967585597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,8 @@\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n \r\n-const [a, b] = 'qwerqwer'.split(' ');\r\n-\r\n-// let t = input();\r\n-// while (t--) {\r\n-//   const \r\n-// }\n\\ No newline at end of file\n+let t = input();\r\n+while (t--) {\r\n+  const [a, b] = input().split(' ').map(Number);\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638967603318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,5 +25,6 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const [a, b] = input().split(' ').map(Number);\r\n+\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638967628862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n \r\n+const stack = [];\r\n let t = input();\r\n while (t--) {\r\n   const [a, b] = input().split(' ').map(Number);\r\n \r\n"
                },
                {
                    "date": 1638968707486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,6 +26,6 @@\n const stack = [];\r\n let t = input();\r\n while (t--) {\r\n   const [a, b] = input().split(' ').map(Number);\r\n-\r\n+  if (a === )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638968800767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,7 +25,15 @@\n \r\n const stack = [];\r\n let t = input();\r\n while (t--) {\r\n-  const [a, b] = input().split(' ').map(Number);\r\n-  if (a === )\r\n+  const [command, number] = input().split(' ').map(Number);\r\n+  if (command === 'push') {\r\n+    stack.push(number);\r\n+  } else if (command === 'pop') {\r\n+\r\n+  } else if (command === 'size') {\r\n+\r\n+  } else if (command === 'top') {\r\n+\r\n+  }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638968809266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n const stack = [];\r\n let t = input();\r\n while (t--) {\r\n-  const [command, number] = input().split(' ').map(Number);\r\n+  const [command, number] = input().split(' ');\r\n   if (command === 'push') {\r\n     stack.push(number);\r\n   } else if (command === 'pop') {\r\n \r\n"
                },
                {
                    "date": 1638968957611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,13 @@\n let t = input();\r\n while (t--) {\r\n   const [command, number] = input().split(' ');\r\n   if (command === 'push') {\r\n-    stack.push(number);\r\n+    stack.push(Number(number));\r\n   } else if (command === 'pop') {\r\n-\r\n+    if (stack[stack.length - 1] === undefined) {\r\n+      console.log(-1);\r\n+     }\r\n   } else if (command === 'size') {\r\n \r\n   } else if (command === 'top') {\r\n \r\n"
                },
                {
                    "date": 1638968990005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,11 @@\n     stack.push(Number(number));\r\n   } else if (command === 'pop') {\r\n     if (stack[stack.length - 1] === undefined) {\r\n       console.log(-1);\r\n-     }\r\n+    } else {\r\n+      const poppedNum = stack.pop();\r\n+    }\r\n   } else if (command === 'size') {\r\n \r\n   } else if (command === 'top') {\r\n \r\n"
                },
                {
                    "date": 1638968995742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n     if (stack[stack.length - 1] === undefined) {\r\n       console.log(-1);\r\n     } else {\r\n       const poppedNum = stack.pop();\r\n+      console.log(poppedNum);\r\n     }\r\n   } else if (command === 'size') {\r\n \r\n   } else if (command === 'top') {\r\n"
                },
                {
                    "date": 1638969007402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n       const poppedNum = stack.pop();\r\n       console.log(poppedNum);\r\n     }\r\n   } else if (command === 'size') {\r\n-\r\n+    console.log(stack.length);\r\n   } else if (command === 'top') {\r\n \r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638969026423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,7 +38,12 @@\n     }\r\n   } else if (command === 'size') {\r\n     console.log(stack.length);\r\n   } else if (command === 'top') {\r\n-\r\n+    if (stack[stack.length - 1] === undefined) {\r\n+      console.log(-1);\r\n+    } else {\r\n+      const poppedNum = stack.pop();\r\n+      console.log(poppedNum);\r\n+    }\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638969038948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,8 @@\n   } else if (command === 'top') {\r\n     if (stack[stack.length - 1] === undefined) {\r\n       console.log(-1);\r\n     } else {\r\n-      const poppedNum = stack.pop();\r\n-      console.log(poppedNum);\r\n+      console.log(stack[stack.length - 1]);\r\n     }\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638969047489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,5 +44,5 @@\n     } else {\r\n       console.log(stack[stack.length - 1]);\r\n     }\r\n   }\r\n-}\n\\ No newline at end of file\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638969140088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,14 @@\n       console.log(poppedNum);\r\n     }\r\n   } else if (command === 'size') {\r\n     console.log(stack.length);\r\n+  } else if (command === 'empty') {\r\n+    if (stack.length === 0) {\r\n+      console.log(1);\r\n+    } else {\r\n+      console.log(0);\r\n+    }\r\n   } else if (command === 'top') {\r\n     if (stack[stack.length - 1] === undefined) {\r\n       console.log(-1);\r\n     } else {\r\n"
                },
                {
                    "date": 1638969170187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,15 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `14\r\n-push 1\r\n-push 2\r\n-top\r\n-size\r\n-empty\r\n-pop\r\n-pop\r\n-pop\r\n-size\r\n-empty\r\n-pop\r\n-push 3\r\n-empty\r\n-top`\r\n+  : `7\r\n+  pop\r\n+  top\r\n+  push 123\r\n+  top\r\n+  pop\r\n+  top\r\n+  pop`\r\n ).split('\\n');\r\n \r\n const input = (() => {\r\n   let line = 0;\r\n"
                },
                {
                    "date": 1638969232821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,23 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n   : `7\r\n-  pop\r\n-  top\r\n-  push 123\r\n-  top\r\n-  pop\r\n-  top\r\n-  pop`\r\n+pop\r\n+top\r\n+push 123\r\n+top\r\n+pop\r\n+top\r\n+pop`\r\n ).split('\\n');\r\n \r\n const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n \r\n+let answer = '';\r\n const stack = [];\r\n let t = input();\r\n while (t--) {\r\n   const [command, number] = input().split(' ');\r\n"
                },
                {
                    "date": 1638969249766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n   if (command === 'push') {\r\n     stack.push(Number(number));\r\n   } else if (command === 'pop') {\r\n     if (stack[stack.length - 1] === undefined) {\r\n-      console.log(-1);\r\n+      // console.log(-1);\r\n+      answer += '-1\\n';\r\n     } else {\r\n       const poppedNum = stack.pop();\r\n       console.log(poppedNum);\r\n     }\r\n"
                },
                {
                    "date": 1638969273874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,10 @@\n       // console.log(-1);\r\n       answer += '-1\\n';\r\n     } else {\r\n       const poppedNum = stack.pop();\r\n-      console.log(poppedNum);\r\n+      // console.log(poppedNum);\r\n+      answre += `${poppedNum}\\n`\r\n     }\r\n   } else if (command === 'size') {\r\n     console.log(stack.length);\r\n   } else if (command === 'empty') {\r\n"
                },
                {
                    "date": 1638969307375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,13 @@\n       answer += '-1\\n';\r\n     } else {\r\n       const poppedNum = stack.pop();\r\n       // console.log(poppedNum);\r\n-      answre += `${poppedNum}\\n`\r\n+      answer += `${poppedNum}\\n`\r\n     }\r\n   } else if (command === 'size') {\r\n-    console.log(stack.length);\r\n+    // console.log(stack.length);\r\n+    answer += `${stack.length}`;\r\n   } else if (command === 'empty') {\r\n     if (stack.length === 0) {\r\n       console.log(1);\r\n     } else {\r\n"
                },
                {
                    "date": 1638969343899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,14 +33,16 @@\n       answer += `${poppedNum}\\n`\r\n     }\r\n   } else if (command === 'size') {\r\n     // console.log(stack.length);\r\n-    answer += `${stack.length}`;\r\n+    answer += `${stack.length}\\n`;\r\n   } else if (command === 'empty') {\r\n     if (stack.length === 0) {\r\n-      console.log(1);\r\n+      // console.log(1);\r\n+      answer += '1\\n';\r\n     } else {\r\n-      console.log(0);\r\n+      // console.log(0);\r\n+      answer += '0\\n';\r\n     }\r\n   } else if (command === 'top') {\r\n     if (stack[stack.length - 1] === undefined) {\r\n       console.log(-1);\r\n"
                },
                {
                    "date": 1638969360702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,10 @@\n       answer += '0\\n';\r\n     }\r\n   } else if (command === 'top') {\r\n     if (stack[stack.length - 1] === undefined) {\r\n-      console.log(-1);\r\n+      // console.log(-1);\r\n+      answer += '-1\\n';\r\n     } else {\r\n       console.log(stack[stack.length - 1]);\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1638969392759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n     if (stack[stack.length - 1] === undefined) {\r\n       // console.log(-1);\r\n       answer += '-1\\n';\r\n     } else {\r\n-      console.log(stack[stack.length - 1]);\r\n+      // console.log(stack[stack.length - 1]);\r\n+      answer += `${stack[stack.length - 1]}\\n`;\r\n     }\r\n   }\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1638969403221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,5 +51,6 @@\n       // console.log(stack[stack.length - 1]);\r\n       answer += `${stack[stack.length - 1]}\\n`;\r\n     }\r\n   }\r\n-};\n\\ No newline at end of file\n+};\r\n+console.log(answer);\n\\ No newline at end of file\n"
                }
            ],
            "date": 1638941310553,
            "name": "Commit-0",
            "content": "const fs = require('fs');\r\nconst stdin = (current.platform === 'linux'\r\n  ? fs.readFileSync('/dev/stdin').toString()\r\n  : ``\r\n).split('\\n');\r\nconsole.log(stdin);"
        }
    ]
}