{
    "sourceFile": "항해99/문제/chap2/11279.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 92,
            "patches": [
                {
                    "date": 1639050234167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1639050281127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,5 @@\n-const fs = require('fs');\n\\ No newline at end of file\n+const fs = require('fs');\r\n+const stdin = (process.platform === 'linux'\r\n+  ? fs.readFileSync('/dev/stdin').toString()\r\n+  : ``\r\n+)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639050320479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,18 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : ``\r\n+  : `13\r\n+0\r\n+1\r\n+2\r\n+0\r\n+0\r\n+3\r\n+2\r\n+1\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0`\r\n )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639050358800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,5 @@\n 0\r\n 0\r\n 0\r\n 0`\r\n-)\n\\ No newline at end of file\n+).split('\\n');\n\\ No newline at end of file\n"
                },
                {
                    "date": 1639050684691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,10 @@\n 0\r\n 0\r\n 0\r\n 0`\r\n-).split('\\n');\n\\ No newline at end of file\n+).split('\\n');\r\n+\r\n+const input = () => {\r\n+  let line = 0;\r\n+  return () => stdin[line++];\r\n+};\r\n"
                },
                {
                    "date": 1639050696782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,8 @@\n 0\r\n 0`\r\n ).split('\\n');\r\n \r\n-const input = () => {\r\n+const input = () => ({\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n-};\r\n+})();\r\n"
                },
                {
                    "date": 1639050705208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,8 @@\n 0\r\n 0`\r\n ).split('\\n');\r\n \r\n-const input = () => ({\r\n+const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n"
                },
                {
                    "date": 1639050716672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,4 +20,6 @@\n const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n+\r\n+let t = input();\r\n"
                },
                {
                    "date": 1639050723312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,4 +22,5 @@\n   return () => stdin[line++];\r\n })();\r\n \r\n let t = input();\r\n+console.log(t--);\r\n"
                },
                {
                    "date": 1639050747350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,5 +22,7 @@\n   return () => stdin[line++];\r\n })();\r\n \r\n let t = input();\r\n-console.log(t--);\r\n+while (t--) {\r\n+\r\n+};\r\n"
                },
                {
                    "date": 1639051019498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,6 +23,6 @@\n })();\r\n \r\n let t = input();\r\n while (t--) {\r\n-\r\n+  const number = Number(input());\r\n };\r\n"
                },
                {
                    "date": 1639051024559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,5 +24,6 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n+  console.log(number);\r\n };\r\n"
                },
                {
                    "date": 1639051039754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,6 +24,6 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n-  console.log(number);\r\n+\r\n };\r\n"
                },
                {
                    "date": 1639051326238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n 0\r\n 0\r\n 0`\r\n ).split('\\n');\r\n+const heap = [];\r\n \r\n const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n"
                },
                {
                    "date": 1639054442615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n 0\r\n 0\r\n 0`\r\n ).split('\\n');\r\n-const heap = [];\r\n+const heap = ['None'];\r\n \r\n const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n@@ -25,6 +25,6 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n-\r\n+  \r\n };\r\n"
                },
                {
                    "date": 1639054594405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,6 +25,9 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n-  \r\n+  const heapLength = heap.length - 1;\r\n+  const answer = () => {\r\n+\r\n+  };\r\n };\r\n"
                },
                {
                    "date": 1639054632612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n-  const heapLength = heap.length - 1;\r\n+  const currentLength = heap.length - 1;\r\n   const answer = () => {\r\n-\r\n+    while\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639054671359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,7 +27,9 @@\n while (t--) {\r\n   const number = Number(input());\r\n   const currentLength = heap.length - 1;\r\n   const answer = () => {\r\n-    while\r\n+    while (currentLength > 1) {\r\n+      const parentIdx = currentLength;\r\n+    }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639054726849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,12 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n-  const currentLength = heap.length - 1;\r\n+  const currentIdx = heap.length - 1;\r\n   const answer = () => {\r\n-    while (currentLength > 1) {\r\n+    while (currentIdx > 1) {\r\n       const parentIdx = currentLength;\r\n+      if (heap[parentIdx] < heap[currentIdx])\r\n     }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639054739127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,10 @@\n   const currentIdx = heap.length - 1;\r\n   const answer = () => {\r\n     while (currentIdx > 1) {\r\n       const parentIdx = currentLength;\r\n-      if (heap[parentIdx] < heap[currentIdx])\r\n+      if (heap[parentIdx] < heap[currentIdx]) {\r\n+        \r\n+      }\r\n     }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639054779273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   const answer = () => {\r\n     while (currentIdx > 1) {\r\n       const parentIdx = currentLength;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n-        \r\n+        let temp;\r\n       }\r\n     }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639055301141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,10 @@\n   const answer = () => {\r\n     while (currentIdx > 1) {\r\n       const parentIdx = currentLength;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n-        let temp;\r\n+        let temp = heap[parentIdx];\r\n+        \r\n       }\r\n     }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639055351833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n     while (currentIdx > 1) {\r\n       const parentIdx = currentLength;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n-        \r\n+        heap[parentIdx] = heap[currentIdx];\r\n+        heap[currentIdx] = temp;\r\n       }\r\n     }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639055363965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,10 @@\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n         heap[parentIdx] = heap[currentIdx];\r\n         heap[currentIdx] = temp;\r\n+      } else {\r\n+        break;\r\n       }\r\n     }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639055443870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n   const currentIdx = heap.length - 1;\r\n-  const answer = () => {\r\n+  const insert = () => {\r\n     while (currentIdx > 1) {\r\n       const parentIdx = currentLength;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n@@ -37,6 +37,10 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n+  }\r\n+  const answer = () => {\r\n+\r\n+    }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639055450557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,7 +40,6 @@\n     }\r\n   }\r\n   const answer = () => {\r\n \r\n-    }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639055492206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,12 @@\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n-  const currentIdx = heap.length - 1;\r\n-  const insert = () => {\r\n+  \r\n+  const insert = (val) => {\r\n+    heap.push(val);\r\n+    const currentIdx = heap.length - 1;\r\n     while (currentIdx > 1) {\r\n       const parentIdx = currentLength;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n"
                },
                {
                    "date": 1639055523007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,12 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n+    return;\r\n   }\r\n   const answer = () => {\r\n-\r\n+    if (number !== 0) {\r\n+      insert(number);\r\n+    }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639055557637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   const insert = (val) => {\r\n     heap.push(val);\r\n     const currentIdx = heap.length - 1;\r\n     while (currentIdx > 1) {\r\n-      const parentIdx = currentLength;\r\n+      const parentIdx = currentIdx;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n         heap[parentIdx] = heap[currentIdx];\r\n         heap[currentIdx] = temp;\r\n"
                },
                {
                    "date": 1639055683446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,13 @@\n       }\r\n     }\r\n     return;\r\n   }\r\n+\r\n+  const delete = () => {\r\n+    \r\n+  }\r\n+\r\n   const answer = () => {\r\n     if (number !== 0) {\r\n       insert(number);\r\n     }\r\n"
                },
                {
                    "date": 1639055757776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     }\r\n     return;\r\n   }\r\n \r\n-  const delete = () => {\r\n+  const erase = (val) => {\r\n     \r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639055776921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     }\r\n     return;\r\n   }\r\n \r\n-  const erase = (val) => {\r\n+  const erase = () => {\r\n     \r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639055947139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,11 @@\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n-    \r\n+    let temp = heap[1];\r\n+    heap[1] = heap[heap.length - 1];\r\n+    heap[heap.length - 1] = temp;\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639055977425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n   const erase = () => {\r\n     let temp = heap[1];\r\n     heap[1] = heap[heap.length - 1];\r\n     heap[heap.length - 1] = temp;\r\n+    prevMax = heap.pop();\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639055985768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n     let temp = heap[1];\r\n     heap[1] = heap[heap.length - 1];\r\n     heap[heap.length - 1] = temp;\r\n     prevMax = heap.pop();\r\n+    currentIdx = 1;\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639056013914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,13 @@\n     let temp = heap[1];\r\n     heap[1] = heap[heap.length - 1];\r\n     heap[heap.length - 1] = temp;\r\n     prevMax = heap.pop();\r\n-    currentIdx = 1;\r\n+    let currentIdx = 1;\r\n+\r\n+    while (currentIdx <= heap.length - 1) {\r\n+\r\n+    }\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639056154456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,13 +46,13 @@\n   const erase = () => {\r\n     let temp = heap[1];\r\n     heap[1] = heap[heap.length - 1];\r\n     heap[heap.length - 1] = temp;\r\n-    prevMax = heap.pop();\r\n+    const prevMax = heap.pop();\r\n     let currentIdx = 1;\r\n \r\n     while (currentIdx <= heap.length - 1) {\r\n-\r\n+      \r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056214443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     const prevMax = heap.pop();\r\n     let currentIdx = 1;\r\n \r\n     while (currentIdx <= heap.length - 1) {\r\n-      \r\n+      const leftChildIdx = currentIdx * 2;\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056231565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n     let currentIdx = 1;\r\n \r\n     while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n+      const rightChildIdx = currentIdx * 2 + 1;\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056251913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n \r\n     while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n+      const maxIdx = currentIdx;\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056270693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,10 @@\n     while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       const maxIdx = currentIdx;\r\n+\r\n+      if (leftChildIdx <= heap.length)\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056295681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       const maxIdx = currentIdx;\r\n \r\n-      if (leftChildIdx <= heap.length)\r\n+      if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap)\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056306467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,11 @@\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       const maxIdx = currentIdx;\r\n \r\n-      if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap)\r\n+      if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n+        \r\n+      }\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056330196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,12 +52,12 @@\n \r\n     while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n-      const maxIdx = currentIdx;\r\n+      let maxIdx = currentIdx;\r\n \r\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n-        \r\n+        maxIdx = leftChildIdx\r\n       }\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1639056621809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n \r\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n         maxIdx = leftChildIdx\r\n       }\r\n+      if (rightChildIdx <= heap.length - 1 )\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056650680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,11 @@\n \r\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n         maxIdx = leftChildIdx\r\n       }\r\n-      if (rightChildIdx <= heap.length - 1 )\r\n+      if (rightChildIdx <= heap.length - 1 && heap[rightChildIdx] > heap[maxIdx]) {\r\n+        \r\n+      }\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056659394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n         maxIdx = leftChildIdx\r\n       }\r\n       if (rightChildIdx <= heap.length - 1 && heap[rightChildIdx] > heap[maxIdx]) {\r\n-        \r\n+        maxIdx = rightChildIdx;\r\n       }\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1639056688048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n       }\r\n       if (rightChildIdx <= heap.length - 1 && heap[rightChildIdx] > heap[maxIdx]) {\r\n         maxIdx = rightChildIdx;\r\n       }\r\n+      if (maxIdx === currentIdx)\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056698208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,11 @@\n       }\r\n       if (rightChildIdx <= heap.length - 1 && heap[rightChildIdx] > heap[maxIdx]) {\r\n         maxIdx = rightChildIdx;\r\n       }\r\n-      if (maxIdx === currentIdx)\r\n+      if (maxIdx === currentIdx) {\r\n+        break;\r\n+      }\r\n     }\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056753163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,10 @@\n       if (maxIdx === currentIdx) {\r\n         break;\r\n       }\r\n     }\r\n+    temp = heap[currentIdx];\r\n+    heap[currentIdx] = \r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639056779591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,10 @@\n         break;\r\n       }\r\n     }\r\n     temp = heap[currentIdx];\r\n-    heap[currentIdx] = \r\n+    heap[currentIdx] = heap[maxIdx];\r\n+    heap[maxIdx] = temp;\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639056794579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,12 +63,13 @@\n       }\r\n       if (maxIdx === currentIdx) {\r\n         break;\r\n       }\r\n+      temp = heap[currentIdx];\r\n+      heap[currentIdx] = heap[maxIdx];\r\n+      heap[maxIdx] = temp;\r\n     }\r\n-    temp = heap[currentIdx];\r\n-    heap[currentIdx] = heap[maxIdx];\r\n-    heap[maxIdx] = temp;\r\n+\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639056809305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n       temp = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n     }\r\n-\r\n+    return console.log(prevMax);\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639056821894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,10 @@\n       temp = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n     }\r\n-    return console.log(prevMax);\r\n+    console.log(prevMax)\r\n+    return;\r\n   }\r\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n"
                },
                {
                    "date": 1639056873499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n+\r\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n@@ -67,9 +68,13 @@\n       temp = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n     }\r\n-    console.log(prevMax)\r\n+    if (prevMax === undefined) {\r\n+      console.log(0);\r\n+    } else {\r\n+      console.log(prevMax);\r\n+    }\r\n     return;\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639056910143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,7 +79,9 @@\n \r\n   const answer = () => {\r\n     if (number !== 0) {\r\n       insert(number);\r\n+    } else {\r\n+      erase(number);\r\n     }\r\n   };\r\n };\r\n"
                },
                {
                    "date": 1639056927793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,5 +83,6 @@\n     } else {\r\n       erase(number);\r\n     }\r\n   };\r\n+  answer();\r\n };\r\n"
                },
                {
                    "date": 1639057066716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n-\r\n+    console.log(heap);\r\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n"
                },
                {
                    "date": 1639057184091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,13 +68,14 @@\n       temp = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n     }\r\n-    if (prevMax === undefined) {\r\n-      console.log(0);\r\n-    } else {\r\n-      console.log(prevMax);\r\n-    }\r\n+    console.log(heap);\r\n+    // if (prevMax === undefined) {\r\n+    //   console.log(0);\r\n+    // } else {\r\n+    //   console.log(prevMax);\r\n+    // }\r\n     return;\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639057190368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n-    console.log(heap);\r\n+    // console.log(heap);\r\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n"
                },
                {
                    "date": 1639057221590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,14 +68,14 @@\n       temp = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n     }\r\n-    console.log(heap);\r\n-    // if (prevMax === undefined) {\r\n-    //   console.log(0);\r\n-    // } else {\r\n-    //   console.log(prevMax);\r\n-    // }\r\n+    // console.log(heap);\r\n+    if (prevMax === undefined) {\r\n+      console.log(0);\r\n+    } else {\r\n+      console.log(prevMax);\r\n+    }\r\n     return;\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639057491825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     heap.push(val);\r\n     const currentIdx = heap.length - 1;\r\n     while (currentIdx > 1) {\r\n       const parentIdx = currentIdx;\r\n-      if (heap[parentIdx] < heap[currentIdx]) {\r\n+      if (heap[parentIdx] < Math.floor(heap[currentIdx]/2)) {\r\n         let temp = heap[parentIdx];\r\n         heap[parentIdx] = heap[currentIdx];\r\n         heap[currentIdx] = temp;\r\n       } else {\r\n"
                },
                {
                    "date": 1639057638287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,10 @@\n   const insert = (val) => {\r\n     heap.push(val);\r\n     const currentIdx = heap.length - 1;\r\n     while (currentIdx > 1) {\r\n-      const parentIdx = currentIdx;\r\n-      if (heap[parentIdx] < Math.floor(heap[currentIdx]/2)) {\r\n+      const parentIdx = Math.floor(currentIdx / 2) ;\r\n+      if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n         heap[parentIdx] = heap[currentIdx];\r\n         heap[currentIdx] = temp;\r\n       } else {\r\n@@ -53,9 +53,9 @@\n \r\n     while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n-      let maxIdx = currentIdx;\r\n+      let maxIdx = Math.floor(currentIdx / 2);\r\n \r\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n         maxIdx = leftChildIdx\r\n       }\r\n"
                },
                {
                    "date": 1639057687112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n-    // console.log(heap);\r\n+    console.log(heap);\r\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n@@ -69,13 +69,13 @@\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n     }\r\n     // console.log(heap);\r\n-    if (prevMax === undefined) {\r\n-      console.log(0);\r\n-    } else {\r\n-      console.log(prevMax);\r\n-    }\r\n+    // if (prevMax === undefined) {\r\n+    //   console.log(0);\r\n+    // } else {\r\n+    //   console.log(prevMax);\r\n+    // }\r\n     return;\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639057703800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n-    console.log(heap);\r\n+    // console.log(heap);\r\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n"
                },
                {
                    "date": 1639057742738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n       }\r\n       temp = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n+      console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n     //   console.log(0);\r\n"
                },
                {
                    "date": 1639057870643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     heap[heap.length - 1] = temp;\r\n     const prevMax = heap.pop();\r\n     let currentIdx = 1;\r\n \r\n-    while (currentIdx <= heap.length - 1) {\r\n+    while (currentIdx <= heap.length - 1 && heap.length > 2) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       let maxIdx = Math.floor(currentIdx / 2);\r\n \r\n"
                },
                {
                    "date": 1639057898453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     heap[heap.length - 1] = temp;\r\n     const prevMax = heap.pop();\r\n     let currentIdx = 1;\r\n \r\n-    while (currentIdx <= heap.length - 1 && heap.length > 2) {\r\n+    while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       let maxIdx = Math.floor(currentIdx / 2);\r\n \r\n"
                },
                {
                    "date": 1639057948111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,9 @@\n       }\r\n       temp = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp;\r\n+      currentIdx = maxIdx;\r\n       console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n"
                },
                {
                    "date": 1639058017427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,12 +64,14 @@\n       }\r\n       if (maxIdx === currentIdx) {\r\n         break;\r\n       }\r\n-      temp = heap[currentIdx];\r\n-      heap[currentIdx] = heap[maxIdx];\r\n-      heap[maxIdx] = temp;\r\n-      currentIdx = maxIdx;\r\n+      if (heap[0] !== 'None') {\r\n+        temp = heap[currentIdx];\r\n+        heap[currentIdx] = heap[maxIdx];\r\n+        heap[maxIdx] = temp;\r\n+        currentIdx = maxIdx;\r\n+      }\r\n       console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n"
                },
                {
                    "date": 1639058072279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,14 +64,12 @@\n       }\r\n       if (maxIdx === currentIdx) {\r\n         break;\r\n       }\r\n-      if (heap[0] !== 'None') {\r\n-        temp = heap[currentIdx];\r\n-        heap[currentIdx] = heap[maxIdx];\r\n-        heap[maxIdx] = temp;\r\n-        currentIdx = maxIdx;\r\n-      }\r\n+      let temp2 = heap[currentIdx];\r\n+      heap[currentIdx] = heap[maxIdx];\r\n+      heap[maxIdx] = temp2;\r\n+      currentIdx = maxIdx;\r\n       console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n"
                },
                {
                    "date": 1639058221906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,12 +64,14 @@\n       }\r\n       if (maxIdx === currentIdx) {\r\n         break;\r\n       }\r\n-      let temp2 = heap[currentIdx];\r\n-      heap[currentIdx] = heap[maxIdx];\r\n-      heap[maxIdx] = temp2;\r\n-      currentIdx = maxIdx;\r\n+      if (maxIdx !== 0) {\r\n+        let temp2 = heap[currentIdx];\r\n+        heap[currentIdx] = heap[maxIdx];\r\n+        heap[maxIdx] = temp2;\r\n+        currentIdx = maxIdx;\r\n+      }\r\n       console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n"
                },
                {
                    "date": 1639058360694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     heap[heap.length - 1] = temp;\r\n     const prevMax = heap.pop();\r\n     let currentIdx = 1;\r\n \r\n-    while (currentIdx <= heap.length - 1) {\r\n+    while (currentIdx <= heap.length - 1 && heap.length > 2) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       let maxIdx = Math.floor(currentIdx / 2);\r\n \r\n"
                },
                {
                    "date": 1639058374018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,14 +64,12 @@\n       }\r\n       if (maxIdx === currentIdx) {\r\n         break;\r\n       }\r\n-      if (maxIdx !== 0) {\r\n-        let temp2 = heap[currentIdx];\r\n-        heap[currentIdx] = heap[maxIdx];\r\n-        heap[maxIdx] = temp2;\r\n-        currentIdx = maxIdx;\r\n-      }\r\n+      let temp2 = heap[currentIdx];\r\n+      heap[currentIdx] = heap[maxIdx];\r\n+      heap[maxIdx] = temp2;\r\n+      currentIdx = maxIdx;\r\n       console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n"
                },
                {
                    "date": 1639058960299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,13 @@\n     heap[heap.length - 1] = temp;\r\n     const prevMax = heap.pop();\r\n     let currentIdx = 1;\r\n \r\n-    while (currentIdx <= heap.length - 1 && heap.length > 2) {\r\n+    while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       let maxIdx = Math.floor(currentIdx / 2);\r\n-\r\n+      console.log(maxIdx, currentIdx)\r\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n         maxIdx = leftChildIdx\r\n       }\r\n       if (rightChildIdx <= heap.length - 1 && heap[rightChildIdx] > heap[maxIdx]) {\r\n"
                },
                {
                    "date": 1639059072081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n       let temp2 = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp2;\r\n       currentIdx = maxIdx;\r\n-      console.log(heap);\r\n+      // console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n     //   console.log(0);\r\n"
                },
                {
                    "date": 1639059116343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \r\n     while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n-      let maxIdx = Math.floor(currentIdx / 2);\r\n+      let maxIdx = currentIdx;\r\n       console.log(maxIdx, currentIdx)\r\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n         maxIdx = leftChildIdx\r\n       }\r\n"
                },
                {
                    "date": 1639059136759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     while (currentIdx <= heap.length - 1) {\r\n       const leftChildIdx = currentIdx * 2;\r\n       const rightChildIdx = currentIdx * 2 + 1;\r\n       let maxIdx = currentIdx;\r\n-      console.log(maxIdx, currentIdx)\r\n+      // console.log(maxIdx, currentIdx)\r\n       if (leftChildIdx <= heap.length - 1 && heap[leftChildIdx] > heap[maxIdx]) {\r\n         maxIdx = leftChildIdx\r\n       }\r\n       if (rightChildIdx <= heap.length - 1 && heap[rightChildIdx] > heap[maxIdx]) {\r\n@@ -68,9 +68,9 @@\n       let temp2 = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp2;\r\n       currentIdx = maxIdx;\r\n-      // console.log(heap);\r\n+      console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     // if (prevMax === undefined) {\r\n     //   console.log(0);\r\n"
                },
                {
                    "date": 1639059150787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,11 +68,11 @@\n       let temp2 = heap[currentIdx];\r\n       heap[currentIdx] = heap[maxIdx];\r\n       heap[maxIdx] = temp2;\r\n       currentIdx = maxIdx;\r\n-      console.log(heap);\r\n+      // console.log(heap);\r\n     }\r\n-    // console.log(heap);\r\n+    console.log(heap);\r\n     // if (prevMax === undefined) {\r\n     //   console.log(0);\r\n     // } else {\r\n     //   console.log(prevMax);\r\n"
                },
                {
                    "date": 1639059162617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,14 +70,14 @@\n       heap[maxIdx] = temp2;\r\n       currentIdx = maxIdx;\r\n       // console.log(heap);\r\n     }\r\n-    console.log(heap);\r\n-    // if (prevMax === undefined) {\r\n-    //   console.log(0);\r\n-    // } else {\r\n-    //   console.log(prevMax);\r\n-    // }\r\n+    // console.log(heap);\r\n+    if (prevMax === undefined) {\r\n+      console.log(0);\r\n+    } else {\r\n+      console.log(prevMax);\r\n+    }\r\n     return;\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639059489959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,107 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `13\r\n-0\r\n+  : `100\r\n 1\r\n 2\r\n-0\r\n-0\r\n 3\r\n+4\r\n+5\r\n+6\r\n+7\r\n+8\r\n+9\r\n+10\r\n+1\r\n 2\r\n+3\r\n+4\r\n+5\r\n+6\r\n+7\r\n+8\r\n+9\r\n+10\r\n 1\r\n+2\r\n+3\r\n+4\r\n+5\r\n+6\r\n+7\r\n+8\r\n+9\r\n+10\r\n+1\r\n+2\r\n+3\r\n+4\r\n+5\r\n+6\r\n+7\r\n+8\r\n+9\r\n+10\r\n 0\r\n 0\r\n 0\r\n 0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+1\r\n+2\r\n+3\r\n+4\r\n+5\r\n+6\r\n+7\r\n+8\r\n+9\r\n+10\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n+0\r\n 0`\r\n ).split('\\n');\r\n const heap = ['None'];\r\n \r\n"
                },
                {
                    "date": 1639059544691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n       } else {\r\n         break;\r\n       }\r\n     }\r\n-    // console.log(heap);\r\n+    console.log(heap);\r\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n@@ -158,13 +158,13 @@\n       currentIdx = maxIdx;\r\n       // console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n-    if (prevMax === undefined) {\r\n-      console.log(0);\r\n-    } else {\r\n-      console.log(prevMax);\r\n-    }\r\n+    // if (prevMax === undefined) {\r\n+    //   console.log(0);\r\n+    // } else {\r\n+    //   console.log(prevMax);\r\n+    // }\r\n     return;\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639059688142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n   const number = Number(input());\r\n   \r\n   const insert = (val) => {\r\n     heap.push(val);\r\n-    const currentIdx = heap.length - 1;\r\n+    let currentIdx = heap.length - 1;\r\n     while (currentIdx > 1) {\r\n       const parentIdx = Math.floor(currentIdx / 2) ;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n"
                },
                {
                    "date": 1639059787761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n   const number = Number(input());\r\n   \r\n   const insert = (val) => {\r\n     heap.push(val);\r\n-    let currentIdx = heap.length - 1;\r\n+    const currentIdx = heap.length - 1;\r\n     while (currentIdx > 1) {\r\n       const parentIdx = Math.floor(currentIdx / 2) ;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n"
                },
                {
                    "date": 1639059876064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,15 +115,16 @@\n   const number = Number(input());\r\n   \r\n   const insert = (val) => {\r\n     heap.push(val);\r\n-    const currentIdx = heap.length - 1;\r\n+    let currentIdx = heap.length - 1;\r\n     while (currentIdx > 1) {\r\n       const parentIdx = Math.floor(currentIdx / 2) ;\r\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n         heap[parentIdx] = heap[currentIdx];\r\n         heap[currentIdx] = temp;\r\n+        currentIdx = parentIdx\r\n       } else {\r\n         break;\r\n       }\r\n     }\r\n"
                },
                {
                    "date": 1639059913532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,14 +122,14 @@\n       if (heap[parentIdx] < heap[currentIdx]) {\r\n         let temp = heap[parentIdx];\r\n         heap[parentIdx] = heap[currentIdx];\r\n         heap[currentIdx] = temp;\r\n-        currentIdx = parentIdx\r\n+        currentIdx = parentIdx;\r\n       } else {\r\n         break;\r\n       }\r\n     }\r\n-    console.log(heap);\r\n+    // console.log(heap);\r\n     return;\r\n   }\r\n \r\n   const erase = () => {\r\n@@ -158,14 +158,14 @@\n       heap[maxIdx] = temp2;\r\n       currentIdx = maxIdx;\r\n       // console.log(heap);\r\n     }\r\n-    // console.log(heap);\r\n-    // if (prevMax === undefined) {\r\n-    //   console.log(0);\r\n-    // } else {\r\n-    //   console.log(prevMax);\r\n-    // }\r\n+    console.log(heap);\r\n+    if (prevMax === undefined) {\r\n+      console.log(0);\r\n+    } else {\r\n+      console.log(prevMax);\r\n+    }\r\n     return;\r\n   }\r\n \r\n   const answer = () => {\r\n"
                },
                {
                    "date": 1639059924038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,9 @@\n       heap[maxIdx] = temp2;\r\n       currentIdx = maxIdx;\r\n       // console.log(heap);\r\n     }\r\n-    console.log(heap);\r\n+    // console.log(heap);\r\n     if (prevMax === undefined) {\r\n       console.log(0);\r\n     } else {\r\n       console.log(prevMax);\r\n"
                },
                {
                    "date": 1639059962309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,108 +1,8 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : `100\r\n-1\r\n-2\r\n-3\r\n-4\r\n-5\r\n-6\r\n-7\r\n-8\r\n-9\r\n-10\r\n-1\r\n-2\r\n-3\r\n-4\r\n-5\r\n-6\r\n-7\r\n-8\r\n-9\r\n-10\r\n-1\r\n-2\r\n-3\r\n-4\r\n-5\r\n-6\r\n-7\r\n-8\r\n-9\r\n-10\r\n-1\r\n-2\r\n-3\r\n-4\r\n-5\r\n-6\r\n-7\r\n-8\r\n-9\r\n-10\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-1\r\n-2\r\n-3\r\n-4\r\n-5\r\n-6\r\n-7\r\n-8\r\n-9\r\n-10\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0\r\n-0`\r\n+  : ``\r\n ).split('\\n');\r\n const heap = ['None'];\r\n \r\n const input = (() => {\r\n"
                },
                {
                    "date": 1639060076828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,16 @@\n const fs = require('fs');\r\n const stdin = (process.platform === 'linux'\r\n   ? fs.readFileSync('/dev/stdin').toString()\r\n-  : ``\r\n+  : `8\r\n+100\r\n+50\r\n+75\r\n+1\r\n+2\r\n+51\r\n+0\r\n+0`\r\n ).split('\\n');\r\n const heap = ['None'];\r\n \r\n const input = (() => {\r\n"
                },
                {
                    "date": 1639060107130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n+const answer = '';\r\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n"
                },
                {
                    "date": 1639060147668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n-const answer = '';\r\n+const answerString = '';\r\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n@@ -85,4 +85,6 @@\n     }\r\n   };\r\n   answer();\r\n };\r\n+\r\n+console.log(answerString);\r\n"
                },
                {
                    "date": 1639060194627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,11 +69,13 @@\n       // console.log(heap);\r\n     }\r\n     // console.log(heap);\r\n     if (prevMax === undefined) {\r\n-      console.log(0);\r\n+      // console.log(0);\r\n+      answerString += '0\\n';\r\n     } else {\r\n-      console.log(prevMax);\r\n+      // console.log(prevMax);\r\n+      answerString += `${prevMax}\\n`;\r\n     }\r\n     return;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1639060215058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n const input = (() => {\r\n   let line = 0;\r\n   return () => stdin[line++];\r\n })();\r\n-const answerString = '';\r\n+let answerString = '';\r\n \r\n let t = input();\r\n while (t--) {\r\n   const number = Number(input());\r\n"
                }
            ],
            "date": 1639050234167,
            "name": "Commit-0",
            "content": "const fs = require('fs');"
        }
    ]
}